-- migrations/001_create_users_table.sql
CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username    VARCHAR(50)  NOT NULL UNIQUE,
  `password`  VARCHAR(255) NOT NULL,
  user_role   ENUM('super admin','admin','user') NOT NULL DEFAULT 'user',
  created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_active   BOOLEAN DEFAULT TRUE,
  last_login  TIMESTAMP NULL,
  INDEX idx_username (username),
  INDEX idx_role     (user_role),
  INDEX idx_active   (is_active)
) ENGINE=InnoDB;

INSERT INTO users (username, `password`, user_role) VALUES
('admin',    '$2b$10$xQX5h5rGz8yQ8vK4nJ2.9eF8rYwKbE1mK9tQ2vL3nH6sP7uR4wS8x', 'super admin'),
('operator', '$2b$10$zSZ7j7tIz0aS0xM6pL4.1gH0tAyMdG3oM1vT4xN5pJ8uR9wT6yU0z', 'user'),
('user',    '$2b$10$aTa8k8uJa1bT1yN7qM5.2hI1uBzNhH4pN2wU5yO6qK9vS0xU7zV1a', 'user');
-- tabel sessions, activity, password_resets tidak berubah
-- Create sessions table for Redis backup
CREATE TABLE IF NOT EXISTS user_sessions (
    id VARCHAR(128) PRIMARY KEY,
    user_id INT NOT NULL,
    session_data JSON,
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_user_id (user_id),
    INDEX idx_expires (expires_at)
);

-- Create user_activity log table
CREATE TABLE IF NOT EXISTS user_activity (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    action VARCHAR(100) NOT NULL,
    details JSON,
    ip_address VARCHAR(45),
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_user_id (user_id),
    INDEX idx_action (action),
    INDEX idx_created_at (created_at)
);

-- Create password_resets table
CREATE TABLE IF NOT EXISTS password_resets (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    token VARCHAR(255) NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    used BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_token (token),
    INDEX idx_user_id (user_id),
    INDEX idx_expires (expires_at)
);
